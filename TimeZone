-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Time = Instance.new("TextLabel")
local DeviceChecker = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.421954542, 0, -0.00102282234, 0)
Frame.Size = UDim2.new(0, 176, 0, 29)

Time.Name = "Time"
Time.Parent = Frame
Time.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Time.BorderColor3 = Color3.fromRGB(0, 0, 0)
Time.BorderSizePixel = 0
Time.Position = UDim2.new(0.591329932, 0, 0.103448279, 0)
Time.Size = UDim2.new(0, 58, 0, 22)
Time.Font = Enum.Font.Ubuntu
Time.Text = "TIME"
Time.TextColor3 = Color3.fromRGB(255, 255, 255)
Time.TextSize = 14.000

DeviceChecker.Name = "DeviceChecker"
DeviceChecker.Parent = Frame
DeviceChecker.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DeviceChecker.BorderColor3 = Color3.fromRGB(0, 0, 0)
DeviceChecker.BorderSizePixel = 0
DeviceChecker.Position = UDim2.new(0.102483228, 0, 0.103448279, 0)
DeviceChecker.Size = UDim2.new(0, 26, 0, 22)
DeviceChecker.Font = Enum.Font.Ubuntu
DeviceChecker.TextColor3 = Color3.fromRGB(255, 255, 255)
DeviceChecker.TextSize = 14.000

UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = Frame

-- Scripts:

local function GIJT_fake_script() -- Time.LocalScript 
	local script = Instance.new('LocalScript', Time)

	local timeLabel = script.Parent
	
	-- define a function to update the time
	function updateTime()
		-- get the current time
		local currentTime = os.time()
		-- convert the time to a human-readable format
		local formattedTime = os.date("%I:%M:%S %p", currentTime)
		-- update the time label
		timeLabel.Text = formattedTime
		-- wait for 1 second before updating again
		wait(1)
		-- call the update function recursively
		updateTime()
	end
	
	-- start the time update loop
	updateTime()
end
coroutine.wrap(GIJT_fake_script)()
local function GCMCFW_fake_script() -- Frame.DragScript 
	local script = Instance.new('LocalScript', Frame)

	local frame = script.Parent
	frame.Draggable = true
	frame.Selectable = true
	frame.Active = true
end
coroutine.wrap(GCMCFW_fake_script)()
local function OKXOUW_fake_script() -- DeviceChecker.LocalScript 
	local script = Instance.new('LocalScript', DeviceChecker)

	local UIS = game:GetService("UserInputService")
	local ismobile = UIS.TouchEnabled
	local isconsole = UIS.GamepadEnabled
	local isdesktop = UIS.KeyboardEnabled
	local text = script.Parent
	
	if ismobile then
		text.Text = "ðŸ“±"
		print("You are on mobile")
	elseif isconsole then
		text.Text = "ðŸŽ®"
		print("You are on console")
	elseif isdesktop then
		text.Text = "ðŸ’»"
		print("You are on laptop / computer")
	end
end
coroutine.wrap(OKXOUW_fake_script)()
local function IJXP_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	
end
coroutine.wrap(IJXP_fake_script)()
